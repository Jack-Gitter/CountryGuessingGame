{"ast":null,"code":"var _jsxFileName = \"/Users/jackgitter/Coding Projects/CountryGuessingGame/frontend/src/Login.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { socket } from \"./socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  let [username, setUsername] = useState('');\n  let [pass, setPass] = useState('');\n  useEffect(() => {\n    socket.on('loginStatus', ls => {\n      if (ls.success) {\n        // navigate to the lobby screen, and send lobby from backend\n        //\n      }\n    });\n  });\n  const login = () => {\n    let lr = {\n      username: username,\n      pass: pass\n    };\n    socket.emit('login', lr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setPass(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"18AMBncNpfzOauuPrv03rWQ5vQI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useEffect","useState","socket","jsxDEV","_jsxDEV","Login","_s","username","setUsername","pass","setPass","on","ls","success","login","lr","emit","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jackgitter/Coding Projects/CountryGuessingGame/frontend/src/Login.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { socket } from \"./socket\"\nimport { LoginRequest, LoginStatus } from \"../../shared/types\"\n\nfunction Login() {\n\n    let [username, setUsername] = useState('')\n    let [pass, setPass] = useState('')\n\n    useEffect(() => {\n        socket.on('loginStatus', (ls: LoginStatus) => {\n            if (ls.success) {\n                // navigate to the lobby screen, and send lobby from backend\n                //\n            }\n        })\n    })\n    const login = () => {\n        let lr: LoginRequest = {\n            username: username,\n            pass: pass\n        }\n        socket.emit('login', lr)\n    }\n\n    return (\n        <div>\n        <input onChange={(e) => setUsername(e.target.value)}></input>\n        <input onChange={(e) => setPass(e.target.value)}></input>\n        <button onClick={login}>sign in</button>\n        </div>\n    )\n\n}\n\nexport default Login"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEb,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,IAAI,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElCD,SAAS,CAAC,MAAM;IACZE,MAAM,CAACS,EAAE,CAAC,aAAa,EAAGC,EAAe,IAAK;MAC1C,IAAIA,EAAE,CAACC,OAAO,EAAE;QACZ;QACA;MAAA;IAER,CAAC,CAAC;EACN,CAAC,CAAC;EACF,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAChB,IAAIC,EAAgB,GAAG;MACnBR,QAAQ,EAAEA,QAAQ;MAClBE,IAAI,EAAEA;IACV,CAAC;IACDP,MAAM,CAACc,IAAI,CAAC,OAAO,EAAED,EAAE,CAAC;EAC5B,CAAC;EAED,oBACIX,OAAA;IAAAa,QAAA,gBACAb,OAAA;MAAOc,QAAQ,EAAGC,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DrB,OAAA;MAAOc,QAAQ,EAAGC,CAAC,IAAKT,OAAO,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzDrB,OAAA;MAAQsB,OAAO,EAAEZ,KAAM;MAAAG,QAAA,EAAC;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAGd;AAACnB,EAAA,CA7BQD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA+Bd,eAAeA,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}