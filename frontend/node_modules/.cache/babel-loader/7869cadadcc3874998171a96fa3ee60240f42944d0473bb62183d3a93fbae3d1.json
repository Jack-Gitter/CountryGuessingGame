{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { socketContext } from \"./App\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Lobby() {\n  _s();\n  // on this page, we need to request the lobby model, so we can update the frontend\n\n  let socket = useContext(socketContext);\n  let [players, setPlayers] = useState([]);\n  let [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    socket.emit('getLobbyModel');\n    socket.on('lobbyModel', lm => {\n      setPlayers(lm.players);\n      setRooms(lm.rooms);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [players, rooms]\n  }, void 0, true);\n}\n_s(Lobby, \"D8SnBhrlzUJFCE8FdBXHywjakUk=\");\n_c = Lobby;\nexport default Lobby;\nvar _c;\n$RefreshReg$(_c, \"Lobby\");","map":{"version":3,"names":["useContext","useEffect","useState","socketContext","Fragment","_Fragment","jsxDEV","_jsxDEV","Lobby","_s","socket","players","setPlayers","rooms","setRooms","emit","on","lm","children","_c","$RefreshReg$"],"sources":["/Users/jackgitter/Coding Projects/CountryGuessingGame/frontend/src/Lobby.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport { socketContext } from \"./App\"\nimport { LobbyModel, Player, Room } from \"../../shared/types\"\n\nfunction Lobby() {\n    // on this page, we need to request the lobby model, so we can update the frontend\n\n    let socket = useContext(socketContext)\n    let [players, setPlayers] = useState<Player[]>([])\n    let [rooms, setRooms] = useState<Room[]>([])\n\n    useEffect(() => {\n        socket.emit('getLobbyModel')\n        socket.on('lobbyModel', (lm: LobbyModel) => {\n            setPlayers(lm.players)\n            setRooms(lm.rooms)\n        })\n    }, [])\n\n    return (\n        <>\n            {players}\n            {rooms}\n        </>\n    )\n}\n\nexport default Lobby"],"mappings":";AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,aAAa,QAAQ,OAAO;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGrC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb;;EAEA,IAAIC,MAAM,GAAGV,UAAU,CAACG,aAAa,CAAC;EACtC,IAAI,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EAClD,IAAI,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZS,MAAM,CAACK,IAAI,CAAC,eAAe,CAAC;IAC5BL,MAAM,CAACM,EAAE,CAAC,YAAY,EAAGC,EAAc,IAAK;MACxCL,UAAU,CAACK,EAAE,CAACN,OAAO,CAAC;MACtBG,QAAQ,CAACG,EAAE,CAACJ,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAAAF,SAAA;IAAAa,QAAA,GACKP,OAAO,EACPE,KAAK;EAAA,eACR,CAAC;AAEX;AAACJ,EAAA,CArBQD,KAAK;AAAAW,EAAA,GAALX,KAAK;AAuBd,eAAeA,KAAK;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}